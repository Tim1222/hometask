{"version":3,"sources":["s2-homeworks/hw03/Greeting.module.css","s1-main/App.module.css","s2-homeworks/hw03/Greeting.tsx","s2-homeworks/hw03/GreetingContainer.tsx","s2-homeworks/hw03/HW3.tsx","s1-main/App.tsx","reportWebVitals.ts","s2-homeworks/hw10/bll/loadingReducer.ts","s2-homeworks/hw12/bll/themeReducer.ts","s2-homeworks/hw10/bll/store.ts","index.tsx"],"names":["module","exports","greetingForm","inputAndButtonContainer","error","input","errorInput","button","text","greeting","App","hw","hwTitle","Greeting","_ref","name","setNameCallback","addUser","onEnter","onBlur","totalUsers","lastUserName","inputClass","s","React","createElement","id","className","value","onChange","onKeyDown","onClick","disabled","trim","GreetingContainer","users","addUserCallback","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setError","pureAddUser","length","e","currentTarget","pureOnBlur","key","pureOnEnter","HW3","setUsers","s2","user","_id","v1","concat","_toConsumableArray","pureAddUserCallback","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","initState","isLoading","themeId","reducers","combineReducers","loading","state","arguments","undefined","type","theme","store","legacy_createStore","window","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.2ba55ac8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"greetingForm\":\"Greeting_greetingForm__6bJNW\",\"inputAndButtonContainer\":\"Greeting_inputAndButtonContainer__3fcZz\",\"error\":\"Greeting_error__1-kIQ\",\"input\":\"Greeting_input__2Ju_s\",\"errorInput\":\"Greeting_errorInput__MOxi2\",\"button\":\"Greeting_button__2OES9\",\"text\":\"Greeting_text__5ExOH\",\"greeting\":\"Greeting_greeting__Tbe2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3mMZ5\",\"hw\":\"App_hw__Kz8BD\",\"hwTitle\":\"App_hwTitle__1JSI-\"};","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    onBlur: () => void // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    lastUserName?: string // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {\n        name,\n        setNameCallback,\n        addUser,\n        onEnter,\n        onBlur,\n        error,\n        totalUsers,\n        lastUserName,\n    } // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.input// need to fix with (? s.errorInput : s.input)\n\n    return (\n        <div id={'hw3-form'} className={s.greetingForm}>\n            <div className={s.text}>\n                {'Людей добавили: '}\n                <span id={'hw3-users-total'}>\n                    {totalUsers}\n                </span>\n            </div>\n\n            <div className={s.inputAndButtonContainer}>\n                <div>\n                    <input\n                        id={'hw3-input'}\n                        value={name}\n                        onChange={setNameCallback}\n                        className={inputClass}\n                        onKeyDown={onEnter}\n                        onBlur={onBlur}\n                    />\n                    <div id={'hw3-error'} className={s.error}>\n                        {error}\n                    </div>\n                </div>\n\n                <button\n                    id={'hw3-button'}\n                    onClick={addUser}\n                    className={s.button}\n                    disabled={!name.trim()}\n                    // ДАВАЙТЕ ПРОСЛЕДИМ БОЕВОЙ ПУТЬ addUser:\n                    // ОТСЮДА ОН ВСПЛЫВЕТ В КОМПОНЕНТЕ GreetingContainer И ВЫЗОВЕТ pureAddUser->\n                    // А В pureAddUser ЛИБО ВЫДАСТ ОШИБКУ (ЕСЛИ ПУСТОЙ name) ИЛИ ЗАПУТСИТ addUserCallback->\n                    // КОТОРЫЙ ВСПЛЫВЕТ В КОМПОНЕНТЕ <HW3/> И ВЫЗОВЕТ pureAddUserCallback->\n                    // КОТОРЫЙ СОЗДАСТ НОВЫЙ ОБЪЕКТ И ЗАСЕТАЕТ ЕГО В users НЕ ПОТЕРЯВ И СТАРЫХ ЮЗЕРОВ\n                >\n                    add\n                </button>\n            </div>\n\n            {lastUserName && (\n                <div className={s.greeting}>\n                    Привет <span id={'hw3-last-user'}>{lastUserName}</span>!\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3'\nimport {log} from \"util\";\n\n\n// * 4 - в файле GreetingContainer.tsx дописать типизацию пропсов\n// * 5 - в файле GreetingContainer.tsx указать нужные типы в useState с name и error\n// * 6 - в файле GreetingContainer.tsx дописать тип и логику функции setNameCallback\n// * 7 - в файле GreetingContainer.tsx дописать логику функций pureAddUser, pureOnBlur, pureOnEnter и проверить их тестами\n// * 8 - в файле GreetingContainer.tsx вычислить количество добавленных и имя последнего (totalUsers, lastUserName)\n// * 9 - в файле Greeting.tsx дописать типизацию пропсов\n\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any ***\n    addUserCallback: (name: string) => void // need to fix any\n}\n\nexport const pureAddUser = (name: string, setError: (error: string)=> void, setName: (name: string) => void, addUserCallback: (name: string) => void) => {\n    // const trimmedName = e.currentTarget.value.type()\n\n    if (name.trim() === '') {\n        setError('Ошибка! Введите имя!');\n    } else {\n        addUserCallback(name)\n        setName('')\n        setError('')\n    }\n\n\n\n    // if (trimmedName) {\n    //     setName(trimmedName)\n    //     setError('')\n    // } else {\n    //     setName('')\n    //     setError('Name is required')\n    // }\n    // если имя пустое - показать ошибку: setError('Ошибка! Введите имя!'),\n    // иначе - добавить юзера при помощи addUserCallback и очистить инпут засетав ''\n    // проверить на пустоту можно при помощи метода trim(). К примеру: name.trim() !== ''\n    // ЕСЛИ НЕ БУДЕТ ПОЛУЧАТЬСЯ, НЕ РАССТРАИВАЙСЯ. НА ЧЕТВЕРТОМ ЗАНЯТИИ ПО ТУДУЛИСТУ НАУЧИМ), НО ВСЕ ТАКИ ПОПЫТАЙСЯ))\n}\n\nexport const pureOnBlur = (name: string, setError: (error: string) => void) => { // если имя пустое - показать ошибку\n    if (name.trim() === '') {\n        setError('Ошибка! Введите имя!')\n    }\n}\n\nexport const pureOnEnter = (e: KeyboardEvent<HTMLInputElement>, addUser: () => void) => { // если нажата кнопка Enter - добавить\n    if (e.key === \"Enter\" ) {\n        addUser()\n    }\n\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n                                                                     users,\n                                                                     addUserCallback,\n                                                                 }) => {\n    // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // ***need to fix any\n    const [error, setError] = useState<string>('') // ***need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value) // need to fix\n        error && setError('')\n    }\n    const addUser = () => {\n        // это всего лишь функция стрелочник- она всего лишь получает\n        //сигнал из компоненты <Greeting/> и вызывает pureAddUser (с кучей аргументов)\n        // ЗДЕСЬ НИЧЕГО ПИСАТЬ НЕ НУЖНО-ВСЕ ОК\n\n        pureAddUser(name, setError, setName, addUserCallback)\n\n    }\n    const onBlur = () => {\n        // все тоже самое, что и в addUser -функция стрелочник\n        // всего лишь получает сигнали из компоненты <Greeting/> и вызывает pureOnBlur (с кучкой аргументов)\n        pureOnBlur(name, setError)\n    }\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        // и здесь все тоже самое...)\n        pureOnEnter(e, addUser)\n    }\n\n    const totalUsers = users.length // need to fix\n    const lastUserName = totalUsers > 0 ? users[users.length -1].name : '' // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onBlur={onBlur}\n            onEnter={onEnter}\n            error={error}\n            totalUsers={totalUsers}\n            lastUserName={lastUserName}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport {v1} from 'uuid'\nimport s2 from '../../s1-main/App.module.css'\nimport GreetingContainer from './GreetingContainer'\n\n/*\n* 1 - описать тип UserType ***\n* 2 - указать нужный тип в useState с users ***\n* 3 - дописать типы и логику функции pureAddUserCallback и проверить её тестами ***\n* 4 - в файле GreetingContainer.tsx дописать типизацию пропсов\n* 5 - в файле GreetingContainer.tsx указать нужные типы в useState с name и error\n* 6 - в файле GreetingContainer.tsx дописать тип и логику функции setNameCallback\n* 7 - в файле GreetingContainer.tsx дописать логику функций pureAddUser, pureOnBlur, pureOnEnter и проверить их тестами\n* 8 - в файле GreetingContainer.tsx вычислить количество добавленных и имя последнего (totalUsers, lastUserName)\n* 9 - в файле Greeting.tsx дописать типизацию пропсов\n* 10 - в файле Greeting.tsx вычислить inputClass в зависимости от наличия ошибки\n* 11 - сделать стили в соответствии с дизайном\n* */\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\nexport const pureAddUserCallback = (name: string, setUsers: ( users: UserType[]) => void , users: UserType[]) => { // need to fix any\n    const userID = v1()\n    const user: UserType = {\n        name: name,\n        _id: userID\n    }\n\n    setUsers([...users, user])\n    // need to fix\n    // нужно создать новый объект соответствующий типу UserType\n    // не забыть   сгенеририовать _id и вставить пришедший в функцию name\n\n\n    //засетайЮзеров([...старые users, и наш новый user])\n    // ([...users, setUsers])\n\n\n}\n\nconst HW3 = () => {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        pureAddUserCallback(name, setUsers, users)\n    }\n\n    return (\n        <div id={'hw3'}>\n            <div className={s2.hwTitle}>Homework #3</div>\n            {/*для автоматической проверки дз (не менять)*/}\n\n            <div className={s2.hw}>\n                <GreetingContainer\n                    users={users}\n                    addUserCallback={addUserCallback}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default HW3\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../s2-homeworks/hw01/HW1'\nimport HW2 from \"../s2-homeworks/hw02/HW2\";\nimport HW3 from \"../s2-homeworks/hw03/HW3\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n\n            {/*<HW1/>*/}\n            {/*раскомментировать по ходу выполнения*/}\n            {/*<HW2/>*/}\n            <HW3/>\n            {/*<HW4/>*/}\n\n            {/*при выполнении дз 5 и более - закомментировать здесь дз 1-4, так как они есть внутри дз 5*/}\n            {/*<HW5/>*/}\n        </div>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","const initState = {\n    isLoading: false,\n}\n\nexport const loadingReducer = (state = initState, action: any): any => { // fix any\n    switch (action.type) {\n        // пишет студент  // need to fix\n\n        default:\n            return state\n    }\n}\n\ntype LoadingActionType = {\n    type: 'CHANGE_LOADING'\n    isLoading: boolean\n}\n\nexport const loadingAC = (isLoading: boolean): LoadingActionType => ({\n    type: 'CHANGE_LOADING',\n    isLoading,\n})\n","const initState = {\n    themeId: 1,\n}\n\nexport const themeReducer = (state = initState, action: any): any => { // fix any\n    switch (action.type) {\n        // дописать\n\n        default:\n            return state\n    }\n}\n\nexport const changeThemeId = (id: number): any => ({ type: 'SET_THEME_ID', id }) // fix any\n","import { loadingReducer } from './loadingReducer'\nimport { combineReducers, legacy_createStore } from 'redux'\nimport { themeReducer } from '../../hw12/bll/themeReducer'\n\nconst reducers = combineReducers({\n    loading: loadingReducer, // hw10\n    theme: themeReducer, // hw12\n})\n\nconst store = legacy_createStore(reducers)\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev // для того чтобы автотесты видели состояние данных\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport App from './s1-main/App'\nimport reportWebVitals from './reportWebVitals'\nimport store from './s2-homeworks/hw10/bll/store'\nimport {Provider} from 'react-redux'\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement)\nroot.render(\n    <React.StrictMode>\n        {/*для дз 10*/}\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}